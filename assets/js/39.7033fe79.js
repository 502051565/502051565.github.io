(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{1121:function(a,s,t){"use strict";t.r(s);var n=t(17),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,n=a._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h2",{attrs:{id:"_1-sleuth-zipkin-服务链路追踪"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-sleuth-zipkin-服务链路追踪"}},[a._v("#")]),a._v(" 1.Sleuth+Zipkin 服务链路追踪")]),a._v(" "),n("h3",{attrs:{id:"_1-1为什么使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1为什么使用"}},[a._v("#")]),a._v(" 1.1为什么使用")]),a._v(" "),n("p",[a._v("微服务架构是一个分布式架构， 它按业务划分服务单元， 一个分布式系统往往有很多个服务单元。 由于服务单元数量众多， 业务的复杂性， 如果出现了错误和异常， 很难去定位。 主要体现在， 一个请求可能需要调用很多个服务， 而内部服务的调用复杂性， 决定了问题难以定位。 所以微服务架构中， 必须实现分布式链路追踪， 去跟进一个请求到底有哪些服务参与，参与的顺序又是怎样的， 从而达到每个请求的步骤清晰可见， 出了问题， 很快定位。")]),a._v(" "),n("p",[a._v("链路追踪组件有 Google 的 Dapper， Twitter 的 Zipkin， 以及阿里的 Eagleeye （鹰眼） 等， 它们都是非常优秀的链路追踪开源组件。")]),a._v(" "),n("h3",{attrs:{id:"_1-2-基本术语"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-基本术语"}},[a._v("#")]),a._v(" 1.2 基本术语")]),a._v(" "),n("p",[a._v("Span（跨度） ： 基本工作单元， 发送一个远程调度任务 就会产生一个 Span， Span 是一个 64 位 ID 唯一标识的， Trace 是用另一个 64 位 ID 唯一标识的， Span 还有其他数据信息， 比如摘要、 时间戳事件、 Span 的 ID、 以及进度 ID。\nTrace（跟踪） ： 一系列 Span 组成的一个树状结构。 请求一个微服务系统的 API 接口，这个 API 接口， 需要调用多个微服务， 调用每个微服务都会产生一个新的 Span， 所有由这个请求产生的 Span 组成了这个 Trace。\nAnnotation（标注） ： 用来及时记录一个事件的， 一些核心注解用来定义一个请求的开始和结束 。 这些注解包括以下：\ncs - Client Sent -客户端发送一个请求， 这个注解描述了这个 Span 的开始\nsr - Server Received -服务端获得请求并准备开始处理它， 如果将其 sr 减去 cs 时间戳便可得到网络传输的时间。\nss - Server Sent （服务端发送响应） –该注解表明请求处理的完成(当请求返回客户端)， 如果 ss 的时间戳减去 sr 时间戳， 就可以得到服务器请求的时间。\ncr - Client Received （客户端接收响应） -此时 Span 的结束， 如果 cr 的时间戳减去cs 时间戳便可以得到整个请求所消耗的时间。")]),a._v(" "),n("p",[n("img",{staticClass:"lazy",attrs:{alt:"image-20220111164614595","data-src":t(661),loading:"lazy"}})]),a._v(" "),n("p",[a._v("Span 之间的父子关系如下：")]),a._v(" "),n("p",[n("img",{staticClass:"lazy",attrs:{alt:"image-20220111164650383","data-src":t(662),loading:"lazy"}})]),a._v(" "),n("h3",{attrs:{id:"_1-3-整合-zipkin-链路追踪-可视化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-整合-zipkin-链路追踪-可视化"}},[a._v("#")]),a._v(" 1.3 整合 Zipkin 链路追踪+可视化")]),a._v(" "),n("p",[a._v("zipkin 依赖也同时包含了 sleuth， 可以省略 sleuth 的引用")]),a._v(" "),n("h4",{attrs:{id:"_1-3-1-安装zipkin服务器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-1-安装zipkin服务器"}},[a._v("#")]),a._v(" 1.3.1 安装zipkin服务器")]),a._v(" "),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run -d -p "),n("span",{pre:!0,attrs:{class:"token number"}},[a._v("9411")]),a._v(":9411 openzipkin/zipkin\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br")])]),n("h4",{attrs:{id:"_1-3-2-导入依赖"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-2-导入依赖"}},[a._v("#")]),a._v(" 1.3.2 导入依赖")]),a._v(" "),n("blockquote",[n("p",[a._v("gulimall-common/pom.xml")])]),a._v(" "),n("div",{staticClass:"language-pom line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("        \x3c!--链路追踪+可视化--\x3e\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-zipkin</artifactId>\n            <version>2.2.3.RELEASE</version>\n        </dependency>\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br")])]),n("h4",{attrs:{id:"_1-3-3-配置sleuth与zipkin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-3-配置sleuth与zipkin"}},[a._v("#")]),a._v(" 1.3.3 配置Sleuth与Zipkin")]),a._v(" "),n("blockquote",[n("p",[a._v("所有需要链路追踪的服务都需要一下配置")])]),a._v(" "),n("div",{staticClass:"language-y line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("spring:\n  zipkin:\n  #链路追踪可视化zipkin服务器\n    base-url: http://192.168.157.128:9411/\n    #关闭服务发现，否则spring cloud会把zipkin的url当做服务名称\n    discovery-client-enabled: false\n    #设置使用http的方式传输数据\n    sender:\n      type: web\n  sleuth:\n    sampler:\n    #设置抽样采集率为100%，默认0.1\n      probability: 1\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br")])]),n("h4",{attrs:{id:"_1-3-4-访问http-192-168-157-128-9411-zipkin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-4-访问http-192-168-157-128-9411-zipkin"}},[a._v("#")]),a._v(" 1.3.4 访问http://192.168.157.128:9411/zipkin/")]),a._v(" "),n("p",[n("img",{staticClass:"lazy",attrs:{alt:"image-20220111172610263","data-src":t(663),loading:"lazy"}})]),a._v(" "),n("h4",{attrs:{id:"_1-3-5-懒加载跑一遍流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-5-懒加载跑一遍流程"}},[a._v("#")]),a._v(" 1.3.5 懒加载跑一遍流程")]),a._v(" "),n("blockquote",[n("p",[a._v("查看超过100ms的请求，是否可以优化\n结合zipkin找到慢请求，该降级的降级，该限流的限流")])]),a._v(" "),n("p",[n("img",{staticClass:"lazy",attrs:{alt:"image-20220111174506998","data-src":t(664),loading:"lazy"}})]),a._v(" "),n("blockquote",[n("p",[a._v("细节信息")])]),a._v(" "),n("p",[n("img",{staticClass:"lazy",attrs:{alt:"image-20220111175108978","data-src":t(665),loading:"lazy"}})]),a._v(" "),n("h2",{attrs:{id:"_2-高级篇完结-撒花"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-高级篇完结-撒花"}},[a._v("#")]),a._v(" 2.高级篇完结,撒花!!!")])])}),[],!1,null,null,null);s.default=e.exports},661:function(a,s,t){a.exports=t.p+"assets/img/dfdb6a582dda921364a2afb0bf6a1b98.97be378c.png"},662:function(a,s,t){a.exports=t.p+"assets/img/3e3eadafbf76eeffa550a8987a13c82c.3acfa0b3.png"},663:function(a,s,t){a.exports=t.p+"assets/img/f2175c78d9b9a350814462b84cae8874.c2314676.png"},664:function(a,s,t){a.exports=t.p+"assets/img/59dec5f8f0b24ac1e9ce29d456340b0d.03f8089b.png"},665:function(a,s,t){a.exports=t.p+"assets/img/10d0b2fcd132c85fe15e20f1b8efb298.17afb752.png"}}]);